импорт ОбщегоНазначения
импорт УчетВыпитойВоды

@ВПодсистеме @НаСервере
метод ОтветДляАлисы(ТелоЗапроса: Строка): Строка
    
    знч ДанныеЗапроса = СериализацияJson.ПрочитатьСоответствие(ТелоЗапроса)
    знч Реквест = ДанныеЗапроса["request"] как Соответствие<Строка, Объект?>
    знч Версия = ДанныеЗапроса["version"] как Строка
    знч СессияСоответствие = ДанныеЗапроса["session"] как Соответствие<Строка, Объект?>

    знч Команда = Реквест["command"] как Строка
    
    пер ТекстВОтвет = "Назовите команду"
    если Команда.Длина() > 0
        ТекстВОтвет = ОбработатьПроизвольнуюКоманду(Команда, Системы.Алиса)
    ;
    
    возврат ТекстОтветаАлисе(Версия, СессияСоответствие, ТекстВОтвет)
;

@Локально @НаСервере
метод ТекстОтветаАлисе(Версия: Строка, Сессия: Соответствие<Строка, Объект?>, Текст: Строка): Строка
    знч СтруктураЗапроса = {
        "version": Версия,
        "session": Сессия,
        "response": {
            "text": Текст,
            "end_session": "false"
        }
    }

    пер JSON = СериализацияJson.ЗаписатьОбъект(СтруктураЗапроса)
    возврат JSON
;

@ВПодсистеме @НаСервере
метод ОтветДляТелеграмм(ТелоЗапроса: Строка): ОтветДляТГ
    
    знч ДанныеЗапроса = СериализацияJson.ПрочитатьСоответствие(ТелоЗапроса)
    пер ОтветДляТГ = новый ОтветДляТГ()
    
    если ДанныеЗапроса.СодержитКлюч("message")
        знч Message = ДанныеЗапроса.Получить("message") как Соответствие<Строка, Объект?>
        знч ТекстСообщения = Message.Получить("text") как Строка
        
        если ТекстСообщения.НачинаетсяС("/")
            ОтветДляТГ = ОбработатьБыструюКомандуТелеграмм(ТекстСообщения, Системы.Телеграмм)
        иначе
            ОтветДляТГ.ТекстВОтвет = ОбработатьПроизвольнуюКоманду(ТекстСообщения, Системы.Телеграмм)
        ;
    иначе если ДанныеЗапроса.СодержитКлюч("callback_query")
        знч Callback_query = ДанныеЗапроса.Получить("callback_query") как Соответствие<Строка, Объект?>
        знч ТекстКнопки = Callback_query.Получить("data") как Строка
        ОтветДляТГ = ОбработатьБыструюКомандуТелеграмм(ТекстКнопки, Системы.Телеграмм)
    иначе
        ОтветДляТГ.ТекстВОтвет = "Что-то не так с запросом от телеграмм :("
    ;
    
    возврат ОтветДляТГ
;

@ВПроекте @НаСервере
метод ОтправитьВТелеграмм(Текст: Строка, ПараметрыОтправки: Соответствие<Строка, Строка>|?, ИДЧата = "")

    если ПараметрыОтправки == Неопределено
        ПараметрыОтправки = новый Соответствие<Строка, Строка>()
    ;
    пер Сообщение = новый Соответствие<Строка, Строка>()
    
    Сообщение.Вставить("text", Текст)

    знч НастройкиТГ = Настройки.НастройкиПоИменам(["ТокенБота", "ЧатИД"])
    если ИДЧата == ""
        ИДЧата = НастройкиТГ.Получить("ЧатИД")
    ;
    если ИДЧата == ""
        выбросить (новый ИсключениеВыполнения("Не указана настрока ИДЧата"))
    ;
    Сообщение.Вставить("chat_id", ИДЧата)

    знч ТокенБота = НастройкиТГ.Получить("ТокенБота")
    если ТокенБота == ""
        выбросить (новый ИсключениеВыполнения("Не указана настрока ТокенБота"))
    ;

    // Обработка переданных ПараметровОтправки
    знч ФорматТекста = ПараметрыОтправки.ПолучитьИлиУмолчание<Строка>("ФорматТекста", "HTML")
    Сообщение.Вставить("parse_mode", ФорматТекста)

    знч Клавиатура = ПараметрыОтправки.ПолучитьИлиУмолчание("Клавиатура")
    если Клавиатура != Неопределено
        Сообщение.Вставить("reply_markup", Клавиатура)
    ;

    знч JSON = СериализацияJson.ЗаписатьОбъект(Сообщение)
    КлиентHttp.ЗапросPost("https://api.telegram.org/bot$ТокенБота/sendMessage")
        .УстановитьЗаголовок("Content-Type", "application/json")
        .УстановитьТело(JSON)
        .Выполнить()
;

@Локально @НаСервере
метод ОбработатьПроизвольнуюКоманду(Команда: Строка, Система: Системы): Строка
    
    знч КомандаНрег = Команда.ВНижнийРегистр()
    знч СловаКоманды = РазделитьКомандуНаСлова(КомандаНрег)
    пер ТекстВОтвет = ""
    если ЭтоКомандаПоВоде(СловаКоманды)
        ТекстВОтвет = ОбработкаКомандИнтеграции.ОбработатьКомандуИнтеграции(Система, КомандаНрег, СловаКоманды)
    иначе
        ТекстВОтвет = "Незвестный тип команды"
    ;
    возврат ТекстВОтвет
;

@Локально @НаСервере
метод РазделитьКомандуНаСлова(Команда: Строка): Массив<Строка>
    возврат Команда.Разделить(Образец = '[ _.,!?:+;-=]')
;

@НаСервере @Локально
метод ОбработатьБыструюКомандуТелеграмм(ТекстСообщения: Строка, Телеграмм: Системы): ОтветДляТГ

    пер ТекстВОтвет = ""
    знч ОтветНаБыструюКомандуТГ = новый ОтветДляТГ()
    если ТекстСообщения == "/water_add300"
        ТекстВОтвет = ОбработатьПроизвольнуюКоманду("добавь воду 300", Телеграмм)
        ОтветНаБыструюКомандуТГ.ТекстВОтвет = ТекстВОтвет
    иначе если ТекстСообщения == "/water_comands"
        ОтветНаБыструюКомандуТГ.ТекстВОтвет = "Команды для работы с водой"
        ОтветНаБыструюКомандуТГ.ПараметрыОтправки.Вставить("Клавиатура", КлавиатураБыстрыхКомандПоВоде())
    иначе если ТекстСообщения == "/water_first"
        ОтветНаБыструюКомандуТГ.ТекстВОтвет = "Команда 1"
    иначе
        ТекстВОтвет = "Неизвестная быстрая команда телеграмм"
        ОтветНаБыструюКомандуТГ.ТекстВОтвет = ТекстВОтвет
    ;

    возврат ОтветНаБыструюКомандуТГ

;

@Локально @НаСервере
метод КлавиатураБыстрыхКомандПоВоде(): Строка
    
    знч СтрокиКнопки = новый Массив<Массив<ОписаниеКнопкиКлавиатуры>>()
    знч Строка1Кнопки = новый Массив<ОписаниеКнопкиКлавиатуры>()
    знч Кнопка1 = новый ОписаниеКнопкиКлавиатуры()
    Кнопка1.text = "Первая"
    Кнопка1.callback_data = "/water_first"
    Строка1Кнопки.Добавить(Кнопка1)

    знч Кнопка2 = новый ОписаниеКнопкиКлавиатуры()
    Кнопка2.text = "Вторая"
    Кнопка2.callback_data = "/water_second"
    Строка1Кнопки.Добавить(Кнопка2)
    СтрокиКнопки.Добавить(Строка1Кнопки)

    знч Строка2Кнопки = новый Массив<ОписаниеКнопкиКлавиатуры>()
    знч Кнопка3 = новый ОписаниеКнопкиКлавиатуры()
    Кнопка3.text = "Третья"
    Кнопка3.callback_data = "/water_third"
    Строка2Кнопки.Добавить(Кнопка3)

    знч Кнопка4 = новый ОписаниеКнопкиКлавиатуры()
    Кнопка4.text = "Четвертая"
    Кнопка4.callback_data = "/water_fourth"
    Строка2Кнопки.Добавить(Кнопка4)
    СтрокиКнопки.Добавить(Строка2Кнопки)
    
    знч ОписаниеКлавиатуры = новый Соответствие<Строка, Массив<Массив<ОписаниеКнопкиКлавиатуры>>>()
    ОписаниеКлавиатуры.Вставить("inline_keyboard", СтрокиКнопки)
    
    возврат СериализацияJson.ЗаписатьОбъект(ОписаниеКлавиатуры)
;

@Локально @НаСервере
метод ЭтоКомандаПоВоде(СловаКоманды: Массив<Строка>): Булево
    знч СловаДолжныБыть = ["воды", "воду", "воде", "вода"]
    возврат УниверсальныеКоллекции.МассивыПересекаются(СловаКоманды, СловаДолжныБыть)
;

@Локально @НаСервере
структура ОписаниеКнопкиКлавиатуры
    пер text: Строка
    пер callback_data: Строка
;
